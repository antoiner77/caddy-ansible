---
- include: packages-{{ ansible_pkg_mgr }}.yml

- name: Create Caddy user
  user: name={{ caddy_user }} system=yes createhome=yes home={{ caddy_home }}

- name: Get all Caddy releases
  get_url: url=https://api.github.com/repos/mholt/caddy/git/refs/tags dest={{ caddy_home }}/releases.txt force=yes
  when: caddy_update
  register: caddy_releases_cache

- name: Set Caddy features
  copy: content="{{ caddy_features }}" dest={{ caddy_home }}/features.txt
  when: caddy_update
  register: caddy_features_cache

- name: Download Caddy
  get_url: url=https://caddyserver.com/download/build?os=linux&arch=amd64&features={{ caddy_features }} dest={{ caddy_home }}/caddy.tar.gz force=yes
  when: caddy_releases_cache.changed or caddy_features_cache.changed
  register: caddy_binary_cache

- name: Download Caddy
  get_url: url=https://caddyserver.com/download/build?os=linux&arch=amd64&features={{ caddy_features }} dest={{ caddy_home }}/caddy.tar.gz

- name: Extract Caddy
  unarchive: src={{ caddy_home }}/caddy.tar.gz dest={{ caddy_home }} copy=no owner={{ caddy_user }}
  when: caddy_binary_cache.changed

- name: Extract Caddy
  unarchive: src={{ caddy_home }}/caddy.tar.gz dest={{ caddy_home }} creates={{ caddy_home }}/caddy copy=no owner={{ caddy_user }}

- name: Copy Caddy Binary
  copy: src={{ caddy_home }}/caddy dest=/usr/local/bin/ mode=0755 remote_src=True
  notify: Restart Caddy

- name: Create directories
  file: path={{ item }} state=directory owner={{ caddy_user }} mode=0700
  with_items:
    - /etc/caddy
    - /etc/ssl/caddy
    - /var/www
    - /var/log/caddy

- name: Create Caddyfile
  copy: content="{{caddy_config}}" dest=/etc/caddy/Caddyfile owner={{ caddy_user }}
  notify: Restart Caddy

- name: Check if systemd is running
  stat: path=/run/systemd/system
  register: systemd

- name: Upstart service for ubuntu 12.04
  copy: src={{ caddy_home }}/init/linux-upstart/caddy.conf.ubuntu-12.04 dest=/etc/init/caddy.conf mode=0644 remote_src=True
  when: ansible_distribution == 'Ubuntu' and ansible_distribution_release == 'precise'
  register: custom_upstart_ubuntu
  notify: Restart Caddy

- name: Upstart service for centos 6
  copy: src={{ caddy_home }}/init/linux-upstart/caddy.conf.centos-6 dest=/etc/init/caddy.conf mode=0644 remote_src=True
  when: ansible_distribution == 'CentOS' and ansible_distribution_major_version == '6'
  register: custom_upstart_centos
  notify: Restart Caddy

- name: Upstart service
  copy: src={{ caddy_home }}/init/linux-upstart/caddy.conf dest=/etc/init/caddy.conf mode=0644 remote_src=True
  when: not systemd.stat.exists and not custom_upstart_ubuntu.changed and not custom_upstart_centos.changed
  notify: Restart Caddy

- name: Systemd service
  copy: src={{ caddy_home }}/init/linux-systemd/caddy.service dest=/etc/systemd/system/caddy.service mode=0755 remote_src=True
  when: systemd.stat.exists
  notify: Restart Caddy

- name: Check if the binary can bind to TCP port <1024
  shell: getcap /usr/local/bin/caddy | grep cap_net_bind_service
  failed_when: False
  changed_when: False
  when: not systemd.stat.exists
  register: caddy_bind_cap

- name: Set capability on the binary file to be able to bind to TCP port <1024
  command: setcap cap_net_bind_service=+ep /usr/local/bin/caddy
  when: not systemd.stat.exists and caddy_bind_cap.rc > 0

- name: Start Caddy service
  service: name=caddy state=started enabled=yes
